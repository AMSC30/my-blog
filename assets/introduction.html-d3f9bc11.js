import{_ as d,p as t,q as i,s as e,R as o,t as l,Y as r,n as s}from"./framework-e1bed10d.js";const n={},a=e("h1",{id:"介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),o(" 介绍")],-1),u={href:"https://v3.vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},p=r('<p>在<code>Vuex</code>官网中它有这样一段话：<strong>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</strong></p><p>借用一张<code>Vuex</code>官网中一张关于其状态管理的流程图：</p><div style="text-align:center;"><img src="https://vuex.vuejs.org/vuex.png" alt="Vuex数据状态管理流程图"></div><p>在分析<code>Vuex</code>源码章节，我们会按照<code>Vuex</code>的安装、<code>Vuex</code>的初始化、<code>Vuex</code>提供的辅助<code>API</code>以及<code>Store</code>实例<code>API</code>这几个模块来进行说明，其中最后几个模块是重点。</p><p><strong>Vuex初始化</strong>：</p><ol><li><code>State</code>初始化。</li><li><code>Mutations</code>初始化。</li><li><code>Actions</code>初始化。</li><li><code>Getters</code>初始化和响应式。</li><li><code>Modules</code>初始化。</li></ol><p><strong>Vuex</strong>辅助<code>API</code>设计：</p><ol><li><code>createNamespacedHelpers</code>设计原理。</li><li><code>mapState</code>设计原理。</li><li><code>mapMutations</code>设计思想。</li><li><code>mapActions</code>设计思想。</li></ol><p><strong>Store</strong>实例<code>API</code>设计：</p><ol><li><code>commit</code>设计思想。</li><li><code>dispatch</code>设计思想。</li><li><code>subscribe</code>设计思想。</li><li><code>subscribeAction</code>设计思想。</li><li><code>registerModule</code>设计思想。</li><li><code>unregisterModule</code>设计思想。</li></ol>',10);function x(_,g){const c=s("ExternalLinkIcon");return t(),i("div",null,[a,e("p",null,[e("a",u,[o("官方文档"),l(c)])]),p])}const m=d(n,[["render",x],["__file","introduction.html.vue"]]);export{m as default};
